{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/admin.service.ts","webpack:///src/app/admin/admin/admin.component.ts","webpack:///src/app/admin/admin/admin.component.html","webpack:///src/app/admin/blogs-form/blogs-form.component.ts","webpack:///src/app/admin/blogs-form/blogs-form.component.html","webpack:///src/app/admin/manage-blogs/manage-blogs.component.ts","webpack:///src/app/admin/manage-blogs/manage-blogs.component.html","webpack:///src/app/admin/manage-categories/manage-categories.component.ts","webpack:///src/app/admin/manage-categories/manage-categories.component.html","webpack:///src/app/admin/manage-pages/manage-pages.component.ts","webpack:///src/app/admin/manage-pages/manage-pages.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/banner/banner.component.ts","webpack:///src/app/banner/banner.component.html","webpack:///src/app/blogpost/blog-detail/blog-detail.component.ts","webpack:///src/app/blogpost/blog-detail/blog-detail.component.html","webpack:///src/app/blogpost/blog-list/blog-list.component.ts","webpack:///src/app/blogpost/blog-list/blog-list.component.html","webpack:///src/app/blogpost/blogpost-routing.module.ts","webpack:///src/app/blogpost/blogpost.module.ts","webpack:///src/app/blogpost/blogpost.service.ts","webpack:///src/app/blogpost/categories/categories.component.ts","webpack:///src/app/blogpost/categories/categories.component.html","webpack:///src/app/blogpost/featured-blog/featured-blog.component.ts","webpack:///src/app/blogpost/featured-blog/featured-blog.component.html","webpack:///src/app/blogpost/recent-blog/recent-blog.component.ts","webpack:///src/app/blogpost/recent-blog/recent-blog.component.html","webpack:///src/app/cmspage/cmspage-routing.module.ts","webpack:///src/app/cmspage/cmspage.module.ts","webpack:///src/app/cmspage/contact-class.ts","webpack:///src/app/cmspage/contact/contact.component.ts","webpack:///src/app/cmspage/contact/contact.component.html","webpack:///src/app/cmspage/page.service.ts","webpack:///src/app/cmspage/page/page.component.ts","webpack:///src/app/cmspage/page/page.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/http-interceptors/auth-interceptor.ts","webpack:///src/app/http-interceptors/index.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminDashboardComponent","router","localStorage","removeItem","navigate","logout","selector","templateUrl","styleUrls","routes","path","component","canActivate","children","AdminRoutingModule","forChild","imports","AdminModule","declarations","AdminService","http","baseUrl","get","blogdetail","post","providedIn","AdminComponent","BlogsFormComponent","fb","blogService","route","snapshot","paramMap","pageTitle","adminBlog","subscribe","res","blogForm","patchValue","title","description","is_featured","is_active","imagePath","image","group","required","event","target","files","length","file","setValue","formData","FormData","append","value","updateBlog","status","uploadError","message","error","addBlogs","onSubmit","onSelectedFile","ManageBlogsComponent","service","blogs","data","serverData","err","console","log","confirm","deleteBlog","ngOnInit","ManageCategoriesComponent","ManagePagesComponent","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","AppModule","providers","bootstrap","AuthRoutingModule","AuthGuard","authService","state","url","checkLogin","isLoggedIn","redirectUrl","queryParams","returnUrl","AuthModule","AuthService","serverUrl","username","password","pipe","user","token","setItem","JSON","stringify","handleError","getItem","currentUser","parse","ErrorEvent","errorData","errorTitle","errorDesc","LoginComponent","submitted","loginForm","login","redirect","loginError","BannerComponent","BlogDetailComponent","blogpostservice","blogpost$","params","getblog","BlogListComponent","Title","getBlogs","blogdata","BlogpostRoutingModule","BlogpostModule","BlogpostService","handler","CategoriesComponent","categories","FeaturedBlogComponent","getfeatured_blogs","featuredblog","RecentBlogComponent","getrecent_blogs","recentblog","CmspageRoutingModule","CmspageModule","ContactClass","ContactComponent","pageservice","modal","submit","contactForm","PageService","httpOption","headers","slug","formdata","PageComponent","Pageservice","activeroute","getPage","page","FooterComponent","HeaderComponent","titleService","setTitle","AuthInterceptor","next","authToken","getAuthorizationToken","clone","setHeaders","Authorization","handle","httpInterceptorProviders","provide","useClass","multi","PageNotFoundComponent","gotoHome","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n\n  ngOnInit(): void {\n  }\n  logout(){\n     localStorage.removeItem('currentUser');\n     return this.router.navigate(['/login']);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12 text-center py-5 my-5\">\n      <h1 class=\"text-danger\">Welcome To Admin Dashboard</h1>\n      <button class=\"btn btn-primary\" (click)=\"logout()\">Logout</button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { ManageBlogsComponent } from './manage-blogs/manage-blogs.component';\nimport { ManageCategoriesComponent } from './manage-categories/manage-categories.component';\nimport { ManagePagesComponent } from './manage-pages/manage-pages.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { BlogsFormComponent } from './blogs-form/blogs-form.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'admin',\n    component: AdminComponent,\n   canActivate: [AuthGuard],\n    children: [\n      {\n      path: '',\n      children: [\n        { path: 'blogs', component: ManageBlogsComponent },\n        { path: 'blogs/create' , component : BlogsFormComponent},\n        { path: 'blogs/edit/:id' ,component : BlogsFormComponent },\n        { path: 'categories', component: ManageCategoriesComponent },\n        { path: 'pages', component: ManagePagesComponent },\n        { path: '', component: AdminDashboardComponent }\n      ],\n    }\n  ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { ManageBlogsComponent } from './manage-blogs/manage-blogs.component';\nimport { ManageCategoriesComponent } from './manage-categories/manage-categories.component';\nimport { ManagePagesComponent } from './manage-pages/manage-pages.component';\nimport { BlogsFormComponent } from './blogs-form/blogs-form.component';\n\n\n@NgModule({\n  declarations: [AdminComponent, AdminDashboardComponent, ManageBlogsComponent, ManageCategoriesComponent, ManagePagesComponent, BlogsFormComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Blogpost } from '../blogpost/blogpost';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http : HttpClient) { }\n\n  baseUrl = \"http://localhost/demoproject/blogger/\";\n\n  blogs(){\n    return this.http.get<Blogpost>(this.baseUrl + 'api/adminBlogs');\n  }\n\n  adminBlog(id:number){\n    return this.http.get<any>(this.baseUrl + 'api/adminBlog/' + id);\n  }\n  addBlogs(blogdetail){\n    return this.http.post<any>(this.baseUrl + 'api/createBlog',blogdetail);\n  }\n\n  updateBlog(blogdetail,id:number){\n    return this.http.post<any>(this.baseUrl+'api/updateBlog/'+id,blogdetail);\n  }\n\n  deleteBlog(id){\n    return this.http.delete<any>(this.baseUrl + 'api/deleteBlog/'+id);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<section class=\"dashboard-wrap mtb-40\">\n  <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n            <div class=\"dash-left\">\n                <ul>\n                    <li><a routerLink=\"./\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Dashboard</a></li>\n                    <li><a routerLink=\"./blogs\" routerLinkActive=\"active\">Blogs</a></li>\n                    <!-- <li><a routerLink=\"./categories\" routerLinkActive=\"active\">Categories</a></li> -->\n                    <!-- <li><a routerLink=\"./pages\" routerLinkActive=\"active\">Pages</a></li> -->\n                    <li><a [routerLink]=\"['/login']\">Logout</a></li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-md-9\">\n            <div class=\"dash-right\">\n              <router-outlet></router-outlet>\n            </div>\n        </div>\n      </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../admin.service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-blog-form',\n  templateUrl: './blogs-form.component.html',\n  styleUrls: ['./blogs-form.component.css']\n})\nexport class BlogsFormComponent implements OnInit {\n\n  pageTitle: string;\n  error: string;\n  uploadError: string;\n  imagePath: string;\n\n  blogForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private blogService: AdminService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.pageTitle = 'Edit Blog';\n      this.blogService.adminBlog(+id).subscribe(\n        res => {\n          this.blogForm.patchValue({\n            title: res.title,\n            description: res.description,\n            is_featured: res.is_featured,\n            is_active: res.is_active,\n            id: res.id\n          });\n          this.imagePath = res.image;\n        }\n      );\n    } else {\n      this.pageTitle = 'Create Blog';\n    }\n\n    this.blogForm = this.fb.group({\n      id: [''],\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      is_featured: ['0'],\n      is_active: ['1'],\n      image: [''],\n    });\n  }\n\n  onSelectedFile(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.blogForm.get('image').setValue(file);\n    }\n  }\n\n  get title() { return this.blogForm.get('title'); }\n  get description() { return this.blogForm.get('description'); }\n\n  onSubmit () {\n    const formData = new FormData();\n    formData.append('title', this.blogForm.get('title').value);\n    formData.append('description', this.blogForm.get('description').value);\n    formData.append('is_featured', this.blogForm.get('is_featured').value);\n    formData.append('is_active', this.blogForm.get('is_active').value);\n    formData.append('image', this.blogForm.get('image').value);\n\n    const id = this.blogForm.get('id').value;\n\n    if (id) {\n      this.blogService.updateBlog(formData, +id).subscribe(\n        res => {\n          if (res.status === 'error') {\n            this.uploadError = res.message;\n          } else {\n            this.router.navigate(['/admin/blogs']);\n          }\n        },\n        error => this.error = error\n      );\n    } else {\n      this.blogService.addBlogs(formData).subscribe(\n        res => {\n          if (res.status === 'error') {\n            this.uploadError = res.message;\n          } else {\n            this.router.navigate(['/admin/blogs']);\n          }\n        },\n        error => this.error = error\n      );\n    }\n  }\n}\n","<div class=\"dash-header\">\n  <div class=\"dash-title\">\n      <h1>{{pageTitle}}</h1>\n  </div>\n</div>\n<div class=\"blog-form\">\n  <form [formGroup]=\"blogForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group form-row\">\n        <label class=\"col-md-3\">Title <span class=\"required\">*</span></label>\n        <div class=\"col-md-9\">\n          <input type=\"text\" formControlName=\"title\" class=\"form-control\" placeholder=\"Title\" required>\n          <div *ngIf=\"title.invalid && (title.dirty || title.touched)\" class=\"error\">\n            <div *ngIf=\"title.errors\">\n              Title is required.\n            </div>\n          </div>\n        </div>\n    </div>\n    <div class=\"form-group form-row\">\n      <label class=\"col-md-3\">Is Featured</label>\n      <div class=\"col-md-9\">\n        <input type=\"radio\" formControlName=\"is_featured\" value=\"1\" /> Yes\n        <input type=\"radio\" formControlName=\"is_featured\" value=\"0\"/> No\n      </div>\n    </div>\n    <div class=\"form-group form-row\">\n      <label class=\"col-md-3\">Is Active</label>\n      <div class=\"col-md-9\">\n        <input type=\"radio\" formControlName=\"is_active\" value=\"1\" /> Yes\n        <input type=\"radio\" formControlName=\"is_active\" value=\"0\" /> No\n      </div>\n    </div>\n    <div class=\"form-group form-row\">\n      <label class=\"col-md-3\">Upload Image</label>\n      <div class=\"col-md-9\">\n        <input type=\"file\" id=\"image\" (change)=\"onSelectedFile($event)\" />\n        <div [innerHTML]=\"uploadError\" class=\"error\"></div>\n        <div *ngIf=\"imagePath\">\n          <br />\n          <img [src]=\"imagePath\" width=\"100px\">\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group form-row\">\n        <label class=\"col-md-3\">Description <span class=\"required\">*</span></label>\n        <div class=\"col-md-9\">\n          <textarea formControlName=\"description\" rows=\"5\" class=\"form-control\" placeholder=\"Description\" required></textarea>\n          <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"error\">\n            <div *ngIf=\"description.errors\">\n              Description is required.\n            </div>\n          </div>\n        </div>\n    </div>\n    <div class=\"form-group form-row\">\n        <label class=\"col-md-3\"></label>\n        <div class=\"col-md-9\">\n          <input type=\"hidden\" formControlName=\"id\">\n          <button type=\"submit\" [disabled]=\"!blogForm.valid\" class=\"btn btn-primary\">Save</button>\n        </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../admin.service';\nimport { Blogpost } from '../../blogpost/blogpost';\n\n@Component({\n  selector: 'app-manage-blogs',\n  templateUrl: './manage-blogs.component.html',\n  styleUrls: ['./manage-blogs.component.css']\n})\nexport class ManageBlogsComponent implements OnInit {\n\n  constructor(private service : AdminService) { }\n\n  serverData : Blogpost;\n  ngOnInit(): void {\n    this.service.blogs().subscribe(\n      (data : Blogpost) => this.serverData = data,\n       err => console.log(err)\n    )\n  }\n  onDelete(id: number) {\n    if (confirm('Are you sure want to delete id = ' + id)) {\n      this.service.deleteBlog(id).subscribe(\n        res => {\n          console.log(res);\n          this.ngOnInit();\n        },\n        error => console.log(error)\n      );\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"row py-3\">\n    <div class=\"col-6\">\n      <h3>Manage Blogs</h3>\n    </div>\n    <div class=\"col-6 text-right\">\n      <button [routerLink]=\"['/admin/blogs/create']\"  class=\"btn btn-success\">Add Post</button>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <table class=\"table table-bordered table-striped\">\n        <tr class=\"text-center\">\n          <th class=\"py-3\">S.No.</th>\n          <th class=\"py-3\">Image</th>\n          <th class=\"py-3\">Title</th>\n          <th class=\"py-3\">Action</th>\n        </tr>\n        <tr class=\"text-center\" *ngFor=\"let item of serverData\">\n          <td class=\"py-3\">{{item.id}}</td>\n          <td class=\"py-3\"><img [src]=\"item.image\" alt=\"\" class=\"admin_img\"></td>\n          <td class=\"py-3\">{{item.title}}</td>\n          <td class=\"py-3\">\n            <button class=\"btn btn-primary mx-2\" [routerLink]=\"['/admin/blogs/edit/' + item.id]\">Edit</button>\n            <button (click)=\"onDelete(item.id)\" class=\"btn btn-danger\">Delete</button>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-categories',\n  templateUrl: './manage-categories.component.html',\n  styleUrls: ['./manage-categories.component.css']\n})\nexport class ManageCategoriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>manage-categories works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-pages',\n  templateUrl: './manage-pages.component.html',\n  styleUrls: ['./manage-pages.component.css']\n})\nexport class ManagePagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>manage-pages works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n\nconst routes: Routes = [\n  {path : '', redirectTo : '' , pathMatch : \"full\"},\n  {path : '**', component : PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'blogger';\n  constructor(public router : Router){}\n}\n","<app-header></app-header>\n<app-banner *ngIf=\"router.url=='/'\"></app-banner>\n<app-featured-blog *ngIf=\"router.url=='/'\"></app-featured-blog>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { BrowserModule,Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BannerComponent } from './banner/banner.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { BlogpostModule } from './blogpost/blogpost.module';\nimport { CmspageModule } from './cmspage/cmspage.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AdminModule } from './admin/admin.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { httpInterceptorProviders } from './http-interceptors/index';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    BannerComponent,\n    FooterComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BlogpostModule,\n    CmspageModule,\n    AuthModule,\n    AdminModule,\n    AppRoutingModule\n  ],\n  providers: [\n    Title,\n    httpInterceptorProviders\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {path : 'login',component : LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n\n  checkLogin(url: string) {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n\n    this.authService.redirectUrl = url;\n\n    this.router.navigate(['/login'], {queryParams: { returnUrl: url }} );\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule  } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule ,\n    AuthRoutingModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class AuthModule { }\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  serverUrl = 'http://localhost/demoproject/blogger/';\n  errorData: {};\n\n  constructor(private http: HttpClient) { }\n\n  redirectUrl: string;\n\n  login(username: string, password: string) {\n    return this.http.post<any>(`${this.serverUrl}api/login`, {username: username, password: password})\n    .pipe(map(user => {\n        if (user && user.token) {\n          localStorage.setItem('currentUser', JSON.stringify(user));\n        }\n      }),\n      catchError(this.handleError)\n    );\n  }\n\n  isLoggedIn() {\n    if (localStorage.getItem('currentUser')) {\n      return true;\n    }\n    return false;\n  }\n\n  getAuthorizationToken() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    return currentUser.token;\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n    }\n\n    // return an observable with a user-facing error message\n    this.errorData = {\n      errorTitle: 'Oops! Request for document failed',\n      errorDesc: 'Something bad happened. Please try again later.'\n    };\n    return throwError(this.errorData);\n  }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n  error: {};\n  loginError: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n    ) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.authService.logout();\n  }\n\n  get username() { return this.loginForm.get('username'); }\n  get password() { return this.loginForm.get('password'); }\n\n  onSubmit() {\n    this.submitted = true;\n    this.authService.login(this.username.value, this.password.value).subscribe((data) => {\n       if (this.authService.isLoggedIn) {\n          const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/admin';\n          this.router.navigate([redirect]);\n        } else {\n          this.loginError = 'Username or password is incorrect.';\n        }\n      },\n      error => this.error = error\n    );\n  }\n}\n","\n<section class=\"login-wrap mtb-40\">\n  <div class=\"container\">\n      <div class=\"row justify-content-center\" *ngIf=\"!error\">\n        <div class=\"col-md-6\">\n            <div class=\"login-box\">\n                <h1>Administrator Login</h1>\n                <div class=\"alert alert-danger\" *ngIf=\"loginError\">\n                   {{loginError}}\n                </div>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Username\" required>\n                        <div *ngIf=\"username.invalid && (username.dirty || username.touched)\" class=\"error\">\n                          <div *ngIf=\"username.errors\">\n                            Username is required.\n                          </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error\">\n                          <div *ngIf=\"password.errors\">\n                            Password is required.\n                          </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btn btn-primary\">Log In</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n      </div>\n      <!-- <div class=\"service-error\" *ngIf=\"error\">\n        <h1>{{error.errorTitle}}</h1>\n        <h3>{{error.errorDesc}}</h3>\n     </div> -->\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.css']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"banner\">\n  <div class=\"banner-box\">\n    <div class=\"intro-text\">\n      <div class=\"intro-text-box\">\n        <h1>Lorem Ipsum is simply dummy text</h1>\n        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry standard dummy text ever since the 1500s</p>\n      </div>\n    </div>\n    <img src=\"assets/images/banner.jpg\" alt=\"banner\" />\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute ,ParamMap } from '@angular/router';\nimport { BlogpostService } from '../blogpost.service';\nimport { switchMap } from 'rxjs/operators'\nimport { Observable } from 'rxjs';\nimport { Blog } from '../blog';\n\n@Component({\n  selector: 'app-blog-detail',\n  templateUrl: './blog-detail.component.html',\n  styleUrls: ['./blog-detail.component.css']\n})\nexport class BlogDetailComponent implements OnInit {\n   blogpost$ : Observable<Blog>\n  constructor(private blogpostservice : BlogpostService,private route : ActivatedRoute ){\n   }\n\n  ngOnInit(): void {\n    // let id = this.route.snapshot.paramMap.get('id');\n    //   this.blogpostservice.getblog(id).subscribe(data => this.data.push(data));\n    this.blogpost$ = this.route.paramMap.pipe(\n      switchMap((params : ParamMap) => this.blogpostservice.getblog(+ params.get('id')))\n    )\n    // this.blogpostservice.getblog(2).subscribe(data => this.blog.push(data));\n  }\n\n}\n","<section class=\"blog-detail mtb-40\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <div  *ngIf=\"blogpost$ | async as blogpost\">\n        <div class=\"blog-left\">\n          <h1>{{blogpost.title}}</h1>\n          <div class=\"posted-on\">\n              <p>by <span>{{blogpost.author}}</span> on <span>{{blogpost.created_at}}</span></p>\n          </div>\n          <div class=\"detail-img\">\n             <img src={{blogpost.image}} alt=\"blog1\" />\n          </div>\n          <div class=\"blog-desc\" innerHTML={{blogpost.description}}></div>\n        </div>\n      </div>\n      </div>\n      <div class=\"col-md-4\">\n        <app-recent-blog></app-recent-blog>\n        <app-categories></app-categories>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BlogpostService } from '../blogpost.service';\nimport { Blogpost} from '../blogpost';\n\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.css']\n})\nexport class BlogListComponent implements OnInit {\n\n  public title = \"Blog\";\n  public blogdata : Blogpost;\n\n  constructor(\n    private Title : Title,\n    private blogpostservice : BlogpostService\n    ) { }\n\n  ngOnInit(): void {\n    this.blogpostservice.getBlogs().subscribe((data : Blogpost) => this.blogdata = data);\n  }\n\n}\n","<section class=\"blog-list mtb-40\">\n  <div class=\"container\">\n    <h1>{{title}}</h1>\n    <div class=\"row\">\n      <div class=\"col-md-4\" *ngFor=\"let blogs of blogdata\">\n        <div class=\"blog-box\">\n          <img src={{blogs.image}} alt=\"blog1\" />\n          <h3>{{blogs.title}}</h3>\n          <p>by <span>{{blogs.author}}</span> on <span>{{blogs.created_at}}</span></p>\n          <p>{{blogs.short_desc}}</p>\n          <a [routerLink]=\"['/blog', blogs.id]\" class=\"btn btn-danger\">Read more...</a>\n        </div>\n      </div> <!--col-4-->\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlogListComponent } from './blog-list/blog-list.component';\nimport { BlogDetailComponent } from './blog-detail/blog-detail.component';\n\n\nconst routes: Routes = [\n  {path : 'blog' , component : BlogListComponent},\n  {path : 'blog/:id' , component : BlogDetailComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BlogpostRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlogpostRoutingModule } from './blogpost-routing.module';\nimport { BlogListComponent } from './blog-list/blog-list.component';\nimport { FeaturedBlogComponent } from './featured-blog/featured-blog.component';\nimport { BlogDetailComponent } from './blog-detail/blog-detail.component';\nimport { RecentBlogComponent } from './recent-blog/recent-blog.component';\nimport { CategoriesComponent } from './categories/categories.component';\n\n\n@NgModule({\n  declarations: [BlogListComponent, FeaturedBlogComponent, BlogDetailComponent, RecentBlogComponent, CategoriesComponent],\n  imports: [\n    CommonModule,\n    BlogpostRoutingModule\n  ],\n  exports : [BlogListComponent, FeaturedBlogComponent, BlogDetailComponent, RecentBlogComponent, CategoriesComponent]\n})\nexport class BlogpostModule { }\n","import { Injectable } from '@angular/core';\nimport { Blogpost } from './blogpost';\nimport { Blog } from './blog';\nimport { HttpClient ,HttpBackend } from '@angular/common/http';\nimport { Categories } from './categories';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogpostService {\n\n  public url = 'http://localhost/demoproject/blogger/';\n\n\nprivate http: HttpClient;\n\nconstructor(handler: HttpBackend) {\n    this.http = new HttpClient(handler);\n}\n\n\n  getBlogs(){\n    return this.http.get<Blogpost>(this.url + 'api/blogs');\n  }\n  getfeatured_blogs(){\n    return this.http.get<Blogpost>(this.url + 'api/featured_blogs');\n  }\n  getblog(id){\n    return this.http.get<Blog>(this.url + 'api/blog/' + id);\n  }\n  getrecent_blogs(){\n    return this.http.get<Blogpost>(this.url + 'api/recent_blogs');\n  }\n  categories(){\n    return this.http.get<Categories>(this.url + 'api/categories');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BlogpostService } from '../blogpost.service';\nimport { Categories } from '../categories';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  constructor(private blogpostservice : BlogpostService) { }\n  public categories : Categories;\n\n  ngOnInit(): void {\n    this.blogpostservice.categories().subscribe((data : Categories) => this.categories = data);\n  }\n\n}\n","<div class=\"right-widget categories\">\n  <h3>Categories</h3>\n  <ul>\n     <li *ngFor=\"let category of categories\"><a href=\"#\">{{category.name}}</a></li>\n </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BlogpostService } from '../blogpost.service';\nimport { Blogpost } from '../blogpost';\n\n@Component({\n  selector: 'app-featured-blog',\n  templateUrl: './featured-blog.component.html',\n  styleUrls: ['./featured-blog.component.css']\n})\nexport class FeaturedBlogComponent implements OnInit {\n  public featuredblog : Blogpost\n\n  constructor(private blogpostservice : BlogpostService) { }\n\n  ngOnInit(): void {\n    this.blogpostservice.getfeatured_blogs().subscribe((data : Blogpost) => this.featuredblog = data)\n  }\n\n}\n","<section class=\"featured-blog mtb-40\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4\" *ngFor=\"let Fblog of featuredblog\">\n        <div class=\"blog-box\">\n          <img src={{Fblog.image}} alt=\"blog1\" />\n          <h3>{{Fblog.title}}</h3>\n          <p>by <span>{{Fblog.author}}</span> on <span>{{Fblog.created_at}}</span></p>\n          <p>{{Fblog.short_desc}}</p>\n          <a [routerLink]=\"['/blog',Fblog.id]\" class=\"btn btn-danger\">Read more...</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { BlogpostService } from '../blogpost.service'\nimport { Blogpost } from '../blogpost';\n\n@Component({\n  selector: 'app-recent-blog',\n  templateUrl: './recent-blog.component.html',\n  styleUrls: ['./recent-blog.component.css']\n})\nexport class RecentBlogComponent implements OnInit {\n  public recentblog : Blogpost\n  constructor(private blogpostservice : BlogpostService) { }\n\n  ngOnInit(): void {\n    this.blogpostservice.getrecent_blogs().subscribe((data : Blogpost) => this.recentblog= data);\n  }\n\n}\n","<div class=\"right-widget recent-post\">\n  <h3>Recent Blogs</h3>\n  <div *ngFor=\"let rblog of recentblog\">\n  <a [routerLink]=\"['/blog/'+ rblog.id]\">\n      <div class=\"rb-box\">\n          <div class=\"rb-box-img\">\n              <img src={{rblog.image}} alt=\"blog1\" />\n          </div>\n          <div class=\"rb-box-desc\">\n              <h4>{{rblog.title}}</h4>\n              <p>{{rblog.created_at}}</p>\n          </div>\n      </div>\n  </a>\n</div>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactComponent } from './contact/contact.component';\nimport { PageComponent } from './page/page.component';\n\n\nconst routes: Routes = [\n  {path : 'contact' , component : ContactComponent},\n  {path : 'page/:slug' , component : PageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CmspageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { CmspageRoutingModule } from './cmspage-routing.module';\nimport { ContactComponent } from './contact/contact.component';\nimport { PageComponent } from './page/page.component';\n\n\n@NgModule({\n  declarations: [ContactComponent, PageComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    CmspageRoutingModule\n  ],\n  exports : [ContactComponent, PageComponent]\n})\nexport class CmspageModule { }\n","export class ContactClass {\n  id : number ;\n  name : string ;\n  email : string ;\n  phone : number ;\n  message : string ;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PageService } from '../page.service';\nimport { ContactClass } from '../contact-class';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(private pageservice : PageService , private router : Router) { }\n\n  modal = new ContactClass();\n  submit = false;\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this.submit = true;\n    // console.log(this.modal)\n    return this.pageservice.contactForm(this.modal).subscribe(\n      data => this.modal = data\n    )\n  }\n\n    goToHome(){\n      return this.router.navigate(['/']);\n    }\n}\n","<section class=\"cmspage mtb-40\">\n  <div class=\"container\">\n    <div class=\"page-desc\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n          <h1>Contact</h1>\n          <form #contact=\"ngForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!submit\">\n            <div class=\"form-group\">\n              <input type=\"text\" required placeholder=\"Name\" #name=\"ngModel\" class=\"form-control\" name=\"name\" [(ngModel)]=\"modal.name\" [class.is-invalid]=\"name.touched && name.invalid\">\n            </div>\n            <div class=\"form-group\">\n              <input type=\"text\" required placeholder=\"Email\" #email=\"ngModel\" class=\"form-control\" name=\"email\" [(ngModel)]=\"modal.email\" [class.is-invalid]=\"email.touched && email.invalid\">\n            </div>\n            <div class=\"form-group\">\n              <input type=\"text\" required placeholder=\"Phone\" #phone=\"ngModel\" class=\"form-control\" name=\"phone\" [(ngModel)]=\"modal.phone\" [class.is-invalid]=\"phone.touched && phone.invalid\">\n            </div>\n            <div class=\"form-group\">\n              <textarea name=\"message\" required placeholder=\"Message\" #message=\"ngModel\" cols=\"30\" rows=\"10\" class=\"form-control\" [(ngModel)]=\"modal.message\" [class.is-invalid]=\"message.touched && message.invalid\"></textarea>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"contact.invalid\">Submit</button>\n          </form>\n          <div class=\"gotohome text-center\" *ngIf=\"submit\">\n            <h1 class=\"text-center\">Thank You! Form Sucessfuly Submited</h1>\n            <button class=\"btn btn-danger\" (click)=\"goToHome()\">Go To Home Page</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpHeaders, HttpBackend } from '@angular/common/http';\nimport { Pageclass } from './pageclass';\nimport { ContactClass } from './contact-class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageService {\n\n\nprivate http: HttpClient;\n\nconstructor(handler: HttpBackend) {\n    this.http = new HttpClient(handler);\n}\n\n\n  public url = 'http://localhost/demoproject/blogger/';\n\n  httpOption ={\n    headers : new HttpHeaders({'content-type' : 'json'})\n  };\n\n  getPage(slug : string){\n    return this.http.get<Pageclass>(this.url + 'api/page/' + slug);\n  }\n  contactForm(formdata : ContactClass){\n    return this.http.post<ContactClass>(this.url + 'api/contact' , formdata , this.httpOption)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PageService } from '../page.service';\nimport { ActivatedRoute, ParamMap  } from '@angular/router';\nimport { Pageclass } from '../pageclass';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.css']\n})\nexport class PageComponent implements OnInit {\n  page : Pageclass\n  constructor(private Pageservice : PageService , private activeroute : ActivatedRoute) { }\n  ngOnInit(): void {\n  this.activeroute.paramMap.pipe(\n    switchMap((params : ParamMap) => this.Pageservice.getPage(params.get('slug')))\n  ).subscribe((data : Pageclass) => this.page = data);\n\n  // console.log(this.activeroute.paramMap.subscribe((data) => {\n  //   this.Pageservice.getPage(data.get('slug')).subscribe(dataa => console.log(dataa))\n  // }));\n\n  const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n}\n","<section class=\"about py-5 my-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h2>{{page.title}}</h2>\n        <p class=\"py-3 text-justify\" [innerHTML]='page.description'></p>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  <div class=\"container\">\n    <div class=\"copyright\">\n      <div>Designed by RSGiTECH</div>\n    </div>\n  </div>\n</footer>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor( private titleService: Title, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  get isLoggedIn() { return this.authService.isLoggedIn(); }\n\n  setPageTitle(title: string) {\n    this.titleService.setTitle(title);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-blue\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"index.html\">\n      <!-- <img src=\"assets/images/logo.png\" alt=\"Angular Project\" /> -->\n      <h3 class=\"text-uppercase text-danger\">Live Project</h3>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/\" routerLinkActive=\"active\" class=\"nav-link\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/page/about\" routerLinkActive=\"active\" class=\"nav-link\">About</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/page/services\" routerLinkActive=\"active\" class=\"nav-link\">Services</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/contact\" routerLinkActive=\"active\" class=\"nav-link\">Contact</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/blog\" routerLinkActive=\"active\" class=\"nav-link\">Blogs</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav  ml-auto\">\n        <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\n          <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n          <a routerLink=\"/admin\" class=\"nav-link\">Admin Dashboard</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n            <a routerLink=\"/login\" class=\"nav-link\">Logout</a>\n          </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\n\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthService) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        if (this.authService.isLoggedIn()) {\n            const authToken = this.authService.getAuthorizationToken();\n            req = req.clone({\n                setHeaders:\n                    { Authorization: authToken }\n                }\n            );\n        }\n\n        return next.handle(req);\n    }\n}\n","\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from './auth-interceptor';\r\n\r\nexport const httpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor(public router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  gotoHome(){\n    this.router.navigate(['/']);\n  }\n}\n","<section class=\"cmspage mtb-40\">\n  <div class=\"container\">\n    <div class=\"error-404\">\n      <h1>404</h1>\n      <h2>There is nothing here!</h2>\n      <p>Sorry, the page you were looking for in this blog does not exist.</p>\n      <button (click)=\"gotoHome()\" class=\"btn btn-danger\">Go to Home</button>\n    </div>\n  </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}